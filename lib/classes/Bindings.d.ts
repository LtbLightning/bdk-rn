/**
 * A derived address and the index it was found at For convenience this automatically derefs to Address
 */
export declare class AddressInfo {
    /**
     * Child index of this address
     */
    index: number;
    /**
     * Address
     */
    address: string;
    constructor(index: number, address: string);
}
/**
 * A reference to a transaction output.
 */
declare class OutPoint {
    /**
     * The referenced transaction's txid.
     */
    txid: string;
    /**
     * The index of the referenced output in its transaction's vout.
     */
    vout: number;
    constructor(txid: string, vout: number);
}
/**
 * A transaction output, which defines new coins to be created from old ones.
 */
declare class TxOut {
    /**
     * The value of the output, in satoshis.
     */
    value: number;
    /**
     * The address of the output.
     */
    address: string;
    constructor(value: number, address: string);
}
/**
 * Unspent outputs of this wallet
 */
export declare class LocalUtxo {
    /**
     * Reference to a transaction output
     */
    outpoint: OutPoint;
    /**
     * Transaction output
     */
    txout: TxOut;
    /**
     * Whether this UTXO is spent or not
     */
    isSpent: boolean;
    constructor(outpoint: OutPoint, txout: TxOut, isSpent: boolean);
}
export declare class Balance {
    /**
     * Unconfirmed UTXOs generated by a wallet tx
     */
    trustedPending: number;
    /**
     * Unconfirmed UTXOs received from an external wallet
     */
    untrustedPending: number;
    /**
     * Confirmed and immediately spendable balance
     */
    confirmed: number;
    /**
     * Get sum of trusted_pending and confirmed coins
     */
    spendable: number;
    /**
     * Get the whole balance visible to the wallet
     */
    total: number;
    constructor(trustedPending: number, untrustedPending: number, confirmed: number, spendable: number, total: number);
}
export {};
